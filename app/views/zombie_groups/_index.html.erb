<script src="//maps.google.com/maps/api/js?v=3.13&amp;sensor=false&amp;libraries=geometry" type="text/javascript"></script>
<script src='//google-maps-utility-library-v3.googlecode.com/svn/tags/markerclustererplus/2.0.14/src/markerclusterer_packed.js' type='text/javascript'></script>
<h2>List of Zombie Hordes</h2>

<table>
  <thead>
    <tr>
      <th>Latitude</th>
      <th>Longitude</th>
      <th>Address</th>
      <th>Title</th>
      <th colspan="3"></th>
    </tr>
  </thead>

  <tbody>
    <% @zombie_groups.each do |zombie_group| %>
      <tr>
        <td><%= zombie_group.latitude %></td>
        <td><%= zombie_group.longitude %></td>
        <td><%= zombie_group.address %></td>
        <td><%= zombie_group.title %></td>
        <% if user_signed_in? && current_user.admin? %>

        <td><%= link_to 'Show', zombie_group %></td>
        <td><%= link_to 'Destroy', zombie_group, method: :delete, data: { confirm: 'Are you sure?' } %></td>
         <% else %>

          <% end %>
      </tr>

    <% end %>
  </tbody>
</table>

<br>

<%= link_to 'New Zombie group', new_zombie_group_path %>
<%= content_for :scripts do %>
    <script type="text/javascript" charset="utf-8">
      var markersArray = [];
      Gmaps.map.callback = function() {
        var marker = Gmaps.map.markers[0];
        if (marker) {
          // Move existing marker when editing a previously stored location
          google.maps.event.addListener(marker.serviceObject, 'dragend', function() {
            updateFormLocation(this.getPosition());
          });
        }

        // On click, clear markers, place a new one, update coordinates in the form
        google.maps.event.addListener(Gmaps.map.serviceObject, 'click', function(event) {
          clearOverlays();
          placeMarker(event.latLng);
          updateFormLocation(event.latLng);
        });
      };
      // Update form attributes with given coordinates
      function updateFormLocation(latLng) {
        $('#centre_latitude').val(latLng.lat());
        $('#centre_longitude').val(latLng.lng());
        $('#centre_gmaps_zoom').val(Gmaps.map.serviceObject.getZoom());
      }
      // Add a marker with an open infowindow
      function placeMarker(latLng) {
        var marker = new google.maps.Marker({
          position: latLng, 
          map: Gmaps.map.serviceObject,
          draggable: true
        });
        markersArray.push(marker);
        // Set and open infowindow
        var infowindow = new google.maps.InfoWindow({
          content: '<div class="popup"><h2>Awesome!</h2><p>Drag me and adjust the zoom level.</p>'
        });
        infowindow.open(Gmaps.map.serviceObject, marker);
        // Listen to drag & drop
        google.maps.event.addListener(marker, 'dragend', function() {
          updateFormLocation(this.getPosition());
        });
      }
      // Removes the overlays from the map, including the ones loaded with the map itself
      function clearOverlays() {
        for (var i = 0; i < markersArray.length; i++ ) {
          markersArray[i].setMap(null);
        }
        markersArray.length = 0;

        for (var i = 0; i < Gmaps.map.markers.length; i++ ) {
          Gmaps.map.clearMarker(Gmaps.map.markers[i]);
        }
      }
    </script>
<% end %>
<style>
#map{
        position:fixed !important;
        margin-top: 10px !important;
        width: 100%   !important;
        height:100%  !important;
        visibility: visible !important;
        z-index: 5px;
  }



</style>
<div style='width: 800px;'>
  <div id="map" style='width: 800px; height: 400px;'></div>
</div>

<script type="text/javascript">
handler = Gmaps.build('Google');
handler.buildMap({ provider: {}, internal: {id: 'map'}}, function(){
  markers = handler.addMarkers(<%=raw @hash.to_json %>);
  handler.bounds.extendWith(markers);
  handler.fitMapToBounds();
});

</script>